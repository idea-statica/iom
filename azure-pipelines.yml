# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

#trigger:
#- master

variables:
  majorVersion: 20
  minorVersion: 1
  myBuildId: $[counter('', 1)]

  outputDirectory: '$(Build.SourcesDirectory)\bin\$(buildConfiguration)\net45'
  myBuildName: $(majorVersion).$(minorVersion).$(myBuildId)
  name: '$(majorVersion).$(minorVersion).$(myBuildId)'
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  archiveFileName: 'IOM_$(Build.SourceBranch)_$(myBuildName).7z'

name: '$(majorVersion).$(minorVersion).$(myBuildId)'

stages:
- stage: BuildSolutions
  displayName: Building Solutions

  pool:
    vmImage: 'windows-latest'

  jobs:
    - job: BuildSolution
      displayName: Building solution

      steps:
        - checkout: self
        - task: NuGetToolInstaller@1

        - task: NuGetCommand@2
          inputs:
            restoreSolution: '$(solution)'

        - powershell: |
            Write-Host "Using an input-macro works: $(outputDirectory)"

        - task: VSBuild@1
          inputs:
            solution: '$(solution)'
            platform: '$(buildPlatform)'
            configuration: '$(buildConfiguration)'
            maximumCpuCount: true
            logProjectEvents: false


#- task: VSTest@2
#  inputs:
#    platform: '$(buildPlatform)'
#    configuration: '$(buildConfiguration)'

#- stage: DeploySolution
#  displayName: Deploying Solutions

#  pool:
#    vmImage: 'windows-latest'
#  dependsOn: BuildSolutions
#  jobs:
#    - job: DeployingSolution
#      displayName: Deploying solution
#      steps:
#       - checkout: none
        - task: ArchiveFiles@2
          displayName: 'Archiving files $(outputDirectory) to $(Build.ArtifactStagingDirectory)/$(archiveFileName)'
          inputs:
            rootFolderOrFile: '$(outputDirectory)'
            includeRootFolder: false
            archiveType: '7z'
            archiveFile: '$(outputDirectory)/$(archiveFileName)'
            replaceExistingArchive: true

#- task: CopyFiles@2
#  enabled: true
#  displayName: 'Copy built files from $(outputDirectory) to $(Build.ArtifactStagingDirectory)'
#  inputs:
#    SourceFolder: '$(outputDirectory)'
#    Contents: |
#      **\?(*.exe|*.dll|*.db|*.config|*.chm|*.pdf)
#      !**\?(UT_*|AT_*)
#    TargetFolder: '$(Build.ArtifactStagingDirectory)'
#    CleanTargetFolder: true

        - publish: '$(outputDirectory)/$(archiveFileName)'
          displayName: 'Publish IOM $(archiveFileName)'
          artifact: Binaries
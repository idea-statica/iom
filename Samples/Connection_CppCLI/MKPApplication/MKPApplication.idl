// MKPApplication.idl : IDL source for MKPApplication
//

// This file will be processed by the MIDL tool to
// produce the type library (MKPApplication.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";

[
	uuid(707AD803-2F9C-4704-A13C-150CFB93647E),
	version(1.0),
]

library MKPApplicationLib
{
	importlib("stdole2.tlb");


	typedef [v1_enum] [
		uuid(18B61198-D297-4072-A4E2-1B69FCCFE4BD),
			public
	]

	enum eLoadGroupType {
		ePermanent,
		eVariable
	} eLoadGroupType;

	[
		object,
		uuid(8F5F1D1B-76F4-4C11-990A-4D17107D00FD),
		pointer_default(unique)
	]
	interface IMember : IDispatch{
		[propput, helpstring("property Id")] HRESULT Id([in] long Val);
		[propget, helpstring("property Id")] HRESULT Id([out, retval] long *pVal);
		[propput, helpstring("property BeginNode")] HRESULT BeginNode([in] long Val);
		[propget, helpstring("property BeginNode")] HRESULT BeginNode([out, retval] long *pVal);
		[propput, helpstring("property EndNode")] HRESULT EndNode([in] long Val);
		[propget, helpstring("property EndNode")] HRESULT EndNode([out, retval] long *pVal);
		[propput, helpstring("property CrossSection")] HRESULT CrossSection([in] long Val);
		[propget, helpstring("property CrossSection")] HRESULT CrossSection([out, retval] long *pVal);

	};

	[
		uuid(D29DEA1E-FAB8-4E53-AC2B-57BEDE2E75A0)		
	]
	coclass Member
	{
		[default] interface IMember;
	};

	[
		object,
		uuid(8F5F1D1C-76F4-4C11-990A-4D17107D00FD),
		pointer_default(unique)
	]

	interface INode : IDispatch{
		[propput, helpstring("property Id")] HRESULT Id([in] long Val);
		[propget, helpstring("property Id")] HRESULT Id([out, retval] long *pVal);
		[propput, helpstring("property X")] HRESULT X([in] double Val);
		[propget, helpstring("property X")] HRESULT X([out, retval] double *pVal);
		[propput, helpstring("property Y")] HRESULT Y([in] double Val);
		[propget, helpstring("property Y")] HRESULT Y([out, retval] double *pVal);
		[propput, helpstring("property Z")] HRESULT Z([in] double Val);
		[propget, helpstring("property Z")] HRESULT Z([out, retval] double *pVal);
	};

	[
		uuid(62F7E730-72E1-46A5-93E2-FC7899EC770A)		
	]
	coclass Node
	{
		[default] interface INode;
	};

	[
		object,
		uuid(E0BF5735-9EAA-4CA0-8A8F-DBDBF62E3AD0),
		pointer_default(unique)
	]
	interface ICrossSection : IDispatch{
		[propget, helpstring("property Id")] HRESULT Id([out, retval] long *pVal);
		[propget, helpstring("property Name")] HRESULT Name([out, retval] BSTR *num);
	};

	[
		object,
		uuid(9719D48B-3AB7-433D-AD63-0EE7B493F637),
		pointer_default(unique)
	]
	interface ILoadCase : IDispatch{
		[propget, helpstring("property Id")] HRESULT Id([out, retval] long *pVal);
		[propget, helpstring("property Name")] HRESULT Name([out, retval] BSTR *num);

	};
	[
		object,
		uuid(1884445F-3A62-4C61-B9F8-C8CED19A381F),
		pointer_default(unique)
	]
	interface ICombination : IDispatch{
		[propget, helpstring("property Id")] HRESULT Id([out, retval] long *pVal);
		[propget, helpstring("property Name")] HRESULT Name([out, retval] BSTR *num);
		[propget, helpstring("property NumLoadCases")] HRESULT NumLoadCases([out, retval] int *num);
		[helpstring("method LoadCase")] HRESULT LoadCase([in] int id, [out] ILoadCase **ppVal, [out] double *coeff);
	};
	[
		object,
		uuid(5D8AA647-3193-4EE4-B120-B396E6F578AC),
		pointer_default(unique)
	]
	interface ILoadGroup : IDispatch{
		[propget, helpstring("property Id")] HRESULT Id([out, retval] long *pVal);
		[propget, helpstring("property Name")] HRESULT Name([out, retval] BSTR *num);
		[propget, helpstring("property Type")] HRESULT Type([out, retval] eLoadGroupType *num);
	};

	[
		object,
		uuid(8F5F1D1D-76F4-4C11-990A-4D17107D00FD),
		pointer_default(unique)
	]
	interface IMKPAppData : IDispatch{
		[propget, helpstring("property NumNodes")] HRESULT NumNodes([out, retval] int *num);
		[propget, helpstring("property NumMembers")] HRESULT NumMembers([out, retval] int *num);
		[propget, helpstring("property NumCrossSections")] HRESULT NumCrossSections([out, retval] int *num);
		[propget, helpstring("property NumLoadCases")] HRESULT NumLoadCases([out, retval] int *num);
		[propget, helpstring("property NumLoadGroups")] HRESULT NumLoadGroups([out, retval] int *num);
		[propget, helpstring("property NumCombinations")] HRESULT NumCombinations([out, retval] int *num);
		[propget, helpstring("property Nodes")] HRESULT Node([in] int id, [out, retval] INode **ppVal);
		[propget, helpstring("property Members")] HRESULT Member([in] int id, [out, retval] IMember **ppVal);
		[propget, helpstring("property CrossSection")] HRESULT CrossSection([in] int id, [out, retval] ICrossSection **ppVal);
		[propget, helpstring("property LoadCase")] HRESULT LoadCase([in] int id, [out, retval] ILoadCase **ppVal);
		[propget, helpstring("property LoadGroup")] HRESULT LoadGroup([in] int id, [out, retval] ILoadGroup **ppVal);
		[propget, helpstring("property Combination")] HRESULT Combination([in] int id, [out, retval] ICombination **ppVal);
		[helpstring("property CreateDefault")] HRESULT CreateDefault();

	};
	[
		uuid(94CC40CF-A408-4B38-A004-003588E92E15)		
	]
	coclass MKPAppData
	{
		[default] interface IMKPAppData;
	};


	[
		uuid(2C9AB6AE-9D39-47E3-ABDE-05946A70C794)		
	]
	coclass CrossSection
	{
		[default] interface ICrossSection;
	};


	[
		uuid(0C2E46ED-92E9-4176-AC29-48D00DC3C851)		
	]
	coclass LoadCase
	{
		[default] interface ILoadCase;
	};
	[
		uuid(9C7457A9-A33E-41A5-A6B8-723243AF928B)		
	]
	coclass Combination
	{
		[default] interface ICombination;
	};
	[
		uuid(066B8F83-7A1B-44F7-BF88-A5807A153810)		
	]
	coclass LoadGroup
	{
		[default] interface ILoadGroup;
	};
	[
		object,
		uuid(6FD883FF-E0C0-4EE9-AC59-3B965642FBD3),
		pointer_default(unique)
	]
	interface ICombiItem : IDispatch{
		[propget, helpstring("property LoadCase")] HRESULT LoadCase([out, retval] ILoadCase **lc);
		[propget, helpstring("property Coeff")] HRESULT Coeff([out, retval] double *coeff);

	};

	[
		uuid(95D4448B-3323-44D2-86D0-EBABD85EA6F1)		
	]
	coclass CombiItem
	{
		[default] interface ICombiItem;
	};
};

//cpp_quote("_COM_SMARTPTR_TYPEDEF(INode, __uuidof(INode));")

//import "shobjidl.idl";
import "shobjidl.idl";
